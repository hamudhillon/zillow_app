"""
Django settings for payment_gateways project.

Generated by 'django-admin startproject' using Django 3.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
PROJECT_DIR = os.path.dirname(os.path.abspath(__file__))
STATIC_ROOT = os.path.join(PROJECT_DIR, 'static')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '&rg+8tq42j)5i9i5!m!a*k(r@*3gf65j6649qz8@#sp^6n+%9^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'drf_yasg',
    'rest_framework.authtoken',
    'home',
    'django_admin_listfilter_dropdown',
    # 'djcelery',
    'django_celery_results',
    'django_celery_beat'
]

# this setting is required to load tasks
# -------------------------------------------------
import djcelery
djcelery.setup_loader()

# --------------------------------------------------
# BROKER_URL = 'django://'

# CELERYBEAT_SCHEDULER = 'djcelery.schedulers.DatabaseScheduler'

# ------------------------------------------------------

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'payment_gateways.urls'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
        # 'rest_framework.authentication.BasicAuthentication',
        # 'rest_framework.authentication.SessionAuthentication'
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated', )
}

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'payment_gateways.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'zillow',
        'HOST': 'jre.co97n9zijsu0.us-west-2.rds.amazonaws.com',
        'USER': 'zillowuser',
        'PASSWORD':'z8xNdpirbALrPpjm1ipZ'
    }
    
    
    # For Speed Test
    # 'default': {
    #     'ENGINE': 'django.db.backends.postgresql_psycopg2',
    #     'NAME': 'zillow',
    #     'HOST': 'localhost',
    #     'USER': 'nvdeep',
    #     'PASSWORD':'password'
    # }
    
    # Comment Till This
    
    
    
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/
STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]



# ----------------------------------------------------------------------------------------

# CELERY STUFF
BROKER_URL = 'amqp://localhost'
# BROKER_URL = 'amqp://test:test123@localhost:5672/samplehost'
CELERY_RESULT_BACKEND = 'amqp://localhost'
# CELERY_RESULT_BACKEND = 'amqp://test:test123@localhost:5672/samplehost'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'UTC'

from celery.schedules import crontab
CELERYBEAT_SCHEDULE = {
    'Zillow_Scrapper': {
        'task': 'home.tasks.zillow_scrapper',
        'schedule': crontab(hour=22, minute=30)
    },
    'check_records':{
         'task': 'home.tasks.check_records',
        'schedule': crontab(hour=22, minute=33)
    }
        
}

# Setting for listening via https protocol
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

SWAGGER_SETTINGS = {
   'SECURITY_DEFINITIONS': {
    #   'Basic': {
    #         'type': 'basic'
    #   },
      'Bearer': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header'
      }
   }
}

# REDOC_SETTINGS = {
#    'LAZY_RENDERING': False,
# }


# USE_SESSION_AUTH = '/auth/logout'

CELERY_TASK_TRACK_STARTED=True
CELERY_RESULT_BACKEND = 'django-db'
